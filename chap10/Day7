18.01.05


chap10. 예외처리
오류 : 프로그램컴파일하고 실행 도중 발생하는 오동작

컴파일오류 : syntax 오류 
자바 소스 원척적 수정하지 않으면 계속 발생

실행오류 : 실행조건에 따라 발생오류

자바 언어 미리 실행 오류 가능성 문장 실행 : 미리 차단 문장 추가
오류발생 - 다른 문장 대신 실행

예외 : 실행 조건에 따라서 발생 오작동
예외상황 다양 = 예외 클래스 정의
XXXXException 클래스명 

- ArrayIndexOutOfBoundsException : 입력변수 개수 부족으로 범위를 벗어남
- NumberFormatException : 십진수로 변경 불가능한 것이 입력될 때
- ArithmeticException : zero division 상황

--> 예외 발생 피해서 다른 문장 대신 실행하여 흐름 변경 
예외발생하지 않으면 원래 명령을 실행하도록 구성 

1. 예외 직접 처리 try-catch-finally

예외처리 형태
	try{
	//예외발생 가능성 문장
	}
	catch(예외클래스 변수명){
	//예외상황일 때 수행문장
	변수명.메소드명
	}
	finally{
	//예외발생 및 처리와 무관하게 실행
	//시스템 자원 사용 후 반남 문장 정의 유용
	}
	

try{
	1. ==> 예외발생 X
}

catch (AException e) {
	3.
}
catch (AException e) {
	4.
}
finally{
	2. ==> 반드시 실행 필요 문장
	예외 발생 여부 무관
	예외타입 무관
	예외처리 무관
}
5.

- 1번문장 예외 발생 x : 1-2-5
- 1번 문장 A 예외 : 3-2-5
- 1번 문장 B 예외 : 4-2-5
- 1번 문장 C 예외 : 2


2. 예외 간접 처리 
예외 : 발생 문장을 포함하는 메소드를 호출하는 또다른 메소드 내부 처리 - 예외 떠넘기기
throws



chap11.기본 API 클래스

java.lang.*
- Object 클래스
	1> 최상위 클래스
	2> 다른 클래스들은 메소드 상속 자동 포함(10개)
	3> 다른 클래스들은 오버라이딩 가능 
		equals : 객체 저장 비교 가능
		오버라이딩 하면 주소가 아닌 다른 부분 비교 변경 가능 
		toString : 객체 문자열화,객체 정보 문자열로 제공하기 때문에
		패캐지명.클래스명@16진수주소
		다른 클래스 오버라이딩하면 다른 내용 출력 변경 가능 
		출력 문장 내부 자동 호출 
		
		
- System 클래스
	자바 프로그램 실행 컴퓨터 정보 제공 역할 
	모니터 : System.out
	모니터 출력 : System.out.print();
	키보드 : System.in
	
	반복문 종료 : break
	메소드 중단 : return
	프로그램 중단 : System.exit(0)
	
	System.currentTimeNillis(); 
		//현재 날짜 시간 - 1/1000초 단위로 나타냄
		1970/1/1/0/0/0 ~ 현재까지 경과
		프로그램 시간 측정 
	
- String 클래스
	class String extends Object{
	equals(){오버라이딩 : 문자열 비교}
	}
	
	1>
	

- Math 클래스
- Integer 클래스

java.util.*
- Date, Calendar
- StringTokenizer

java.text.*
- SimpleDateFormat
- DecimalFormat
















