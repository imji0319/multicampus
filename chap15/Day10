19.01.09

java.long.*

java.util.* : 
	Data, Calendar 날짜 시간 편리
	List, Map, Set 여러 데이터 저장 
			  
java.text.* :
	SimpleDateFormat : yyyy MM dd hh mm ss
	DecimalFormat : #.## #.00 #,###.00

chap18. 입출력
대부분 메소드 : throws IOException

키보드입력

System클래스 : 자바 클래스 컴퓨터 정보
System.in : System 클래스의 변수 
	class System{
		java.io.InputStream in;    	//java.io.*
	}
	System.in.read();               //InputStream의 메소드 read()


System.in.read() 
	- 영문자, 숫자들 읽어서 풀력
	- 한글, 정수, 실수 연산 X
	
new Scanner(System.in)
	- next() : 문자열, 공백 이전까지
	- nextLine() : 문자열, 공백 포함
	- nextInt() 
	- nextDouble()
	- 한글, 정수, 실수 연산 O

java.io.* : 입출력에 관련한 50여개 클래스(파일, 키보드, 모니터, 메모리 버퍼 등)
	입력
	1byte : InputStream, FileInputStream, BufferedInputStream ( extends InputStream )
		read()
		close()
		-> 1byte
		
	2byte : Reader, FileReader
		read()
		close()
		-> 2byte
	
	출력 
	1byte : OutputStream, FileOutputStream, BufferedOutputStream
		write()
		close()
		-> 1byte
		
	2byte : Writer, FileWriter
		write()
		close()
		-> 2byte
	
	
	File클래스 - 파일 디렉토리 정보 제공 

java.io.File 클래스
1> 파일입출력 기능 메소드 없음
2> windows = 파일 관리 기능 = 파일 시스렘
	=> 파일과 폴더(디렉토리) 정보 제공 클래스  
	
	- 생성자
	File f1 = new File("a.txt");
	==> 프로젝트폴더\a.txt -> 자바 프로그램파일 프로젝트 폴더 default : 상대주소 
	File f2 = new File("c:\test\a.txt")
	==> 파일 위치 직접 지정 : 절대주소
	File f3 = new File(".") //현재 작업 디렉토리
	File f4 = new File("..") //상위 디렉토리 -> workspace
	
	chap18\src\A.java
	File f1 = new File("chap18\src\A.java");  //A.java만 주면 읽지 못함
	File f1 = new File("src\A.java"); 
	==> IOException, FileNotFoundException 발생
	
	- 메소드
	f1.isFile() -> T/F
	f1.exists() -> T/F
	f1.canRead() -> T/F
	f1.canWrite() -> T/F
	
	f1.getXXXPath() -> 위치
	f1.getName() -> 파일 이름
	fl.length() -> 파일의 길이 byte타입으로 리턴
	f1.lastModified -> 최종 수정 시간 
	f1.list() -> 디렉토리의 세부 목록

파일입출력
try{
1> 파일 열기
2> 파일 입력 - write
}
catch(Exception e){
	sysout(e.getMessage());
}
finally{
3> 파일 닫기
}

	
java.io.FileInputStream 클래스	
1> 1byte로 다룸, 영문자, 숫자만 속한 파일 
2> 다국어 사용에는 부적합
	
	- 생성자
	FileInputStream fi = new FileInputStream("a.gif");
		
		int result = 0;
		while ( (result = fi.read()) != -1 ){ //파일 처음-끝 입력
			
		}
		fi.close();
		

	- 메소드
	fi.read();
	fi.close();
	
	
	
	
java.io.FileReader 클래스
1> 2byte로 다룸, 영문자, 숫자, 다국어 등의 구성의 파일 
2> 다국어 사용이 적합
	
	- 생성자
	FileReader fr = new FileReader("a.txt");
	
		int result = 0;
		while ( result = fr.read() != -1 ){ //파일 처음-끝 입력
			
		}
		fr.close();
		
	- 메소드 
	fr.read();
	fr.close();

============================

BoardTest.java 키보드 입력
- BoardVO : 객체 생성
- BoardDAO : 
	insertBoard(BoardVO vo){
		파일 저장
	}
	updateBoard("java","python"){
		title, contents에 "java" 문자열 있으면 python으로 변경;
	}
	viewBoard(1){
	}

		
java.net.*
java.servlet.*
java.sql.*	
	
	
============================

chap12. 멀티스레드

프로그램 program 
	컴퓨터 CPU가 인식 실행 가능한 이진 코드 집합체
프로세스 process
	현재 CPU가 실행중인 프로그램
스레드 thread
	프로세스를 구성하는 작은 작업 단위들
싱글스레드 single thread
	단 하나의 thread 만 수행하는 과정 
멀티스레드 multi thread
	여러 스레드들이 동시에 수행하는 과정 

==> 자바 멀티스레드 api + 규칙 

1. java.lang.Thread 클래스
	1-1. Thread 상속
		class A extends Thread{}
	1-2. run() 오버라이딩
		class A extends Thread{
		필드변수 + 생성자 + 메소드 추가 정의
		public void run(){
		//다른 스래드와 동시에 진행할 동작 내용 정의
		} 
		}
	1-3. A 클래스 객체 생성 -> start() 메소드 호출
		A a1 = new A();
		a1.start(); //run() 호출 실행역할 
		
2. java.lang.Runnable 인터페이스	
	2-1.
	2-2.
	2-3.	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	