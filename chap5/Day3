18.12.28

객체지향언어 : c++, java

5장 참조타입 

자바 변수 타입 : 
- 자바 기본 데이터 타입(종류, 길이  한정) 
stack영역 실제값 저장 구조
	논리값 boolean : 1byte
	단일문자 char : 2byte
	정수 byte : 1byte, short : 2byte, int : 4byte, long : 8byte 
	실수 float : 4byte, double : 8byte
	
- 자바 참조 타입(길이 가변)
stack영역 주소값 저장 구조 -> heap영역 실제값 저장 구조 
	배열 :동일 타입 데이터 여러개 저장
	클래스 : api라이브러리 구형 내장 제공, 프로그래머 구현 
	ex> String : 문자열 표현 조작 데이터들 기능 모아놓은 클래스 
	char : "a" - 2byte 기본타입 
	String : "aaaa" -
	인터페이스
	
	ex>
	논리값 24개 
	정수 100개
	문자열
	학생정보(학번 : 정수, 이름 : 문자열, 점수 : 실수) - 복합적인 데이터
	
	int i = 100;
	String s = 'java';
	double d = 3.14;
	
자바 메모리 모델 
- 클래스 영역 : 메소드=함수 문장 이진코드 나열 저장 
- Stack 영역 : 변수 값 저장 , Last In First Out(LIFO) 
- heap 영역 : 프로그램 수행 종료 이전 삭제 가능 - 사용여부 체크-> 삭제 가능 ==> garbage collection(gc)
	
	

연산자 : 기본 기능 제공
클래스 포함 메소드 : 구현(라이브러리 x), 기본 기능 연산자X

String 
== : 두 문자열 저장 주소값 비교
String 클래스/equals()메소드 : 두 문자열의 값 비교
s1.equals(s3) : s1의 내용과 s3의 내용이 동일한가에 대한 매소드

배열 : 동일 타입 데이터 여러개 저장 구조  ( String 은 여러 문자열 저장 구조 )
1. == : 주소값 비교
2. null 선언 : NullPointerException 발생 

- (기본, 참조) 변수
	데이터 타입 변수명; ==> 변수 선언문
	변수명 = 값; ==> 변수값 초기화문 
	데이터 타입 변수명 = 값; ==> 변수 선언 + 초기화
	
배열 문법 
	1. 배열 변수 선언
	데이터타입 변수명[]
	데이터타입 []변수명
	
	int ar1[] ;
	int []ar1 ;
	배열 변수를 선언할 때 []를 변수 앞뒤 중 하나에 두면 선언 가능 
	
	2. 배열 생성 
	변수명 = new 데이터타입[길이]
	
	ar1 = new int[100]; 100개의 데이터를 가진 배열 선언 
	heap에 정수 자동 0 저장, 실수 0.0, 논리값 false,char 공백 
	
	변수선언 + 생성 ==> int ar1[]=new int[100];

	3. 배열 변수값 초기화  
	ar1.length; ==> 100
	
	배열 인덱스 0부터 시작  
	ar1[0] ~ ar1[99]
	s.o.p(ar1[0]) --> 0
	ar1[0]=10;
	ar1[1]=20;
	ar1[2]=30;
	ar1[3]=40;
	ar1[4]=50;
	
	for (i=0,i<ar1.length,i++){
		ar1[i]=(i+1)*10
	}
	==> 배열 + 반복문 
	0<=index<length-1
	
	
	
	
	
	
	
	
	
	