19.01.10


SQL : 데이터베이스 접근 저장, 조회 언어 

데이터베이스
1> 의미있고 서로 연관있는 데이터 모음 
	학생 데이터 : 학번, 이름, 성적
	회사원 데이터 : 사번, 이름, 급여 
	--> 관계형 데이터베이스
	
2> 테이블 구조 : 행과 열 구조
	행 : row = record
	열 : column

3> 학생 = 학번 이름 성적 
	학생 
	학번 NUMBER(5) NOT NULL UNIQUE
	이름 VARCHAR2(30)  //30 BYTE - 영문 1BYTE, 한글 3BYTE
	성적 NUMBER(10,2) CHECK 성적 >= 0 AND 성적 <= 4.5



데이터베이스관리시스템 DBMS(Date Base Management System)
1> 정보 타입, 길이, 조건 정의
2> 데이터 구성 정보들 정의
3> 저장 문법
4> 조회 문법

RDBMS(Relational DBMS) : 관계형 데이터베이스
	rdbms 종류 제품 - 소프트웨어 - 오라클 


SQL
1> RDBMS 접근 문법 제공 언어
2> 대소문자 구분 X

	1. start Database
	2. Run SQL Command Line
	3. 계정 : admin : system/******
	
	<새로운 계정 생성>
	SQL> connect system/system
	SQL> create user test identified by test; //계정 : test, 비번 : test
	SQL> grant connect, resource to test;
	
SQL*PLUS : sql 작성 - 실행 - 결과 출력 소프르웨어 ( like 이클립스 )
	(SQL developer, orange, toad)




SQL(Structured Query Language)

1. DDL(Data Definition Language) : 데이터 정의 
	테이블 생성 정의 create table 
	테이블 구조 변경 구조 alter table
	테이블 삭제 drop table
	
2. DML(Data Manipulation Language) : 데이터 조작
	insert
	update
	delete
	
3. DCL(Data Control Language) : 데이터 제어
	admin 계정 다른 계정들을 관리하고 권한 부여/삭제

4. DQL(Data Query Language) : 데이터 조회
	select ~


DQL 문법 
	SELECT column명, 연산식, 키워드, ALIAS, *, 함수
	FROM 테이블명
	[WHERE] 조회 조건 (칼럼명 연산자 값)
		비교연산자 : > >= <= = !=
		산술연산자 : + - * /
		논리연산자 : 2개 이상 조건 논리 결합 
				  모두 만족 AND 
				  하나 이상 만족 OR 
				  모두 불만족 NOT 
		NULL 비교 연산자 : IS NULL, IS NOT NULL
			NULL값의 데이터 연산 -> NULL
		like : 패턴 유사 비교 연산자
			오라클 문자열 --> 'Jennifer'
			% : 글자객수 무관, 글자내용 무관
			'%a', 'a%', '%a%', 'a%a' 
		in :
		
		
	[GROUP BY]
	[HAVING]
	[ORDER BY]



	SQL 함수
	nvl(commission_pct,0) : commission_pct에 0이 있다면 null갑을 0으로 변경
	
	
	
	
	EX) 
	1. EMPLOYEES 테이블 EMPLOYEE_ID, FIRST_NAME 조회
		SELECT EMPLOYEE_ID, FIRST_NAME
		FROM EMPLOYEES; 
	
	2. 모든 테이블 칼럽 조회
		SELECT *
		FROM EMPLOYEES; 	
		
	3. DEPARTMENT_ID 칼럼에서 같은 부서 코드 1번 출력 => 부서코드 종류 출력 
		SELECT DISTINCT DEPARTMENT_ID //중복제외 키워드 : Distinct
		FROM EMPLOYEES; 		
	
	4. 연봉값을 알고 싶은데 칼럼이 없음  Salary 칼럽 * 12
		SELECT Salary, Salary * 12
		FROM EMPLOYEES; 		
		
	5. 조회시 이름을 변경 (salary -> 월급, Salary*12 -> 연봉)
		SELECT Salary 월급, Salary * 12 연봉
		FROM EMPLOYEES; 
	
	6.EMPLOYEES 테이블 의 사번 200번의 EMPLOYEE_ID, FIRST_NAME 조회
		SELECT EMPLOYEE_ID, FIRST_NAME
		FROM EMPLOYEES
		WHERE EMPLOYEE_ID = 200; 	
		
	7. NULL 값이 존재하는 칼럼 COMMISSION_PCT 보너스에 대해 받는 사람만 조회  - NULL 비교
		SELECT EMPLOYEE_ID, COMMISSION_PCT
		FROM EMPLOYEES
		WHERE COMMISSION_PCT IS NOT NULL; 
		
	8. COMMISSION_PCT가 있는 사람은 SALARY*COMMISSION_PCT 를 보너스 칼럼으로 구함
		SELECT EMPLOYEE_ID, nvl(SALARY*COMMISSION_PCT,0) 보너스
		FROM EMPLOYEES
		WHERE COMMISSION_PCT IS NOT NULL; 
	
	9. SALARY*COMMISSION_PCT 의 null 값을 특정 값으로 변경하는 nvl()
		SELECT EMPLOYEE_ID, nvl(SALARY*COMMISSION_PCT,0) 보너스
		FROM EMPLOYEES;
	
	10. employees 테이블에서 first_name = Jennifer 사원의 사번, 이름 조회
		SELECT EMPLOYEE_ID, FIRST_NAME
		FROM EMPLOYEES
		WHERE FIRST_NAME = 'Jennifer';	
	
	11. employees 테이블에서 first_name 이 Je로 시작하는 사원의 사번, 이름 조회
		SELECT EMPLOYEE_ID, FIRST_NAME
		FROM EMPLOYEES
		WHERE FIRST_NAME like 'Je%';	
	







