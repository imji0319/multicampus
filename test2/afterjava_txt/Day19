19.01.19

웹브라우저 = 웹클라이어트컴퓨터실행
웹서버 컴퓨터실행 결과 : 브라우저 전송

웹클라이언트 기술 
웹브라우저실행 기술 

html파일 요청
1. 웹서버 html파일 저장
2. 웹브라우저에 서버 연결 요청 (url/ip주소)
3. 웹서버는 요청받은 파일을 찾음
4. 그 파일을 브라우저에 전송
5. 브라우저는 그 파일을 출력  

servlet요청 
1. 웹어플리케이션서버 AServlet작성-컴파일 (자바 형식)
2. 웹브라우저 서버 연결 요청 
3. 웹서버는 요청 파일 해석 
4. servlet이면 웹어플리케이션서버에 해당 파일 요청
5. 웹어플리케이션 서버는 실행 결과를 html로 만들고 해당 파일 웹서버에 전송(servlet의 기능)
6. 웹서버는 그 html파일을 브라우저로 전송
7. 브라우저는 그 파일을 출력


tomcat 
1. 웹서버 : http클라이언트 요청 - 해석 - 응답
	apache,iis - (자바실행능력 X)
2. 자바작성어플리케이션실행능력 : 자바웹어플리케이션


웹서버기술
java : servlet, jsp
non java : cpi, php, asp

servlet 실행
URL : 프로젝트이름/클래스이름
	자체적으로 패키지.클래스이름 이 클래스이름만으로 alias 

등록과 매팅의 설정 :web.xml 파일( WebContent/WEB-INF/web.xml )
	version 3.0 이전으로 잡아야 생성하여 이 파일을 사용함

http 요청 (url : 브라우저 정보, 클라이언트ip,xxx 정보들) 
-> 자바 객체 : HttpServletRequest
http 응답 ( 결과물, 인코딩 방식, 컨텐츠 파일 타입,...)
-> 자바 객체 : HttpServletResponse

요청 -> 처리 -> 응답 

doGet()
- HttpServletRequest : 요청 
request.getRemoteAddr(); //클라이언트 IP
request.getHeader("useragent"); //브라우저 리턴 
*request.getParameter("id") // id 리턴 -> <form> 연관 
request.getMethod(); // get-post

- HttpServletResponse : 응답 
*response.setContentType("text/html;charset=utf-8") //응답할 형태 
*PrintWriter out = respnse.getWrite() // 각 2바이트씩 출력 객체


















