19.01.12

DB 테이블
- 게시물저장
- 게시물조회
- ...

CRUD 기능
- Crate 저장
- Read 조회
- Update 저장
- Delete 삭제

RDB 
DDL
1> 테이블 정의 CREATE
	Create table 테이블명 ( 컬럼명 타입 (길이) [조건],
						  컬럼명 타입 (길이) [조건],
						  ....);
	테이블명과 컬럼명 - 대소문자구분X, 일반문자 + _ 구성, 30문자로 제한
		같은 이름의 테이블 존재할 수 없음, 중복 X
	
	컬럼 타입 
		1. 정수 : NUMBER(n)
		2. 실수 : NUMBER(n,s)
		3. 문자열 : VARCHAR2
		4. 날짜  : DATE
	
	칼럼 길이 : BYTE 수, 자리수 
		한글 : 3BYTE
	
	제약조건 -> insert 할때 효력 발생
	constraint 제약조건이름 제약조건타입
		제약조건이름 : 테이블명_칼럼이름_제약조건타입약자
		
		제약조건타입
		1. primary key : NULL 불가  & 중복 불가, pk
		2. not null : NULL 불가, nn
		3. check : 사용자 정의 조건, ck
		4. unique : 중복 불가, uk
		5. foreign key : 특정 테이블의 특정 칼럼값들만 참조 가능 - foreign key references 테이블명(칼럼),fk
	
	
	테이블복사	
		create table 테이블명 as select * from 테이블명;
	
	회원가입정보 저장 테이블
	테이블명 MEMBER
	정보 : 아이디, 암호, 이름, 폰번호, 이메일, 가입날짜
		id : null X, 중복 안됨 -> PRIMARY KEY, 
		password : null X
		name : 특별한 조건 X 
		phone : 010 시작
		email : 중복 안됨
		indate : 특별한 조건 X 
		
	create table member( id varchar2(10) constraint member_id_pk primary key,
						 password number(12) constraint member_pw_nn not null,
						 name varchar2(30),
						 phone varchar2(20) constraint member_phone_ck check(phone like '010%') ,
						 email varchar2(25) constraint member_email_uk unique,
						 indate date);
						 
	

2> 테이블 수정 ALTER
	칼럼 추가
	alter table 테이블명 add();
		alter table member add(sex varchar2(2));
	
	칼럼 수정
	alter table 테이블명 modify();
		alter table member modify(email number(3));
	-> 테이블 내부 데이터 저장 X 일때 수정 가능 
	-> 데이터 저장 O 일때 수정 불가
	
	칼럼 삭제
	alter table 테이블명 drop column 컬럼명;
		alter table member drop column sex;


	create table member_copy as select * from member;
		-> 기존 테이블 복사 
	
3> 테이블 삭제 DROP
	drop table 테이블명; 
	
	1-1. 데이터와 테이블 완전 제거
		drop table 테이블명;
	
	1-2. 데이터 보관
		create table 복사테이블명 as select * from 삭제테이블명
		drop table 삭제테이블명
		
		

DML(Data Manipulation Language)
1> 데이터 추가  INSERT
	1개의 레코드저장
	insert into 테이블명(컬럼리스트)
				values (값리스트)
	
	리스트 타입, 순서, 개수 동일 
	테이블에 정의된 모든 컬럼에 값을 넣지 않을 경우 넣지 않는 값은 NULL로 삽입됨 
	
	insert into member(id, password, name, phone, email, indate)
		values('oracle',11111,'홍길도','010-1452-4152','tbjh@multi.com',sysdate); 
	
	insert into member(id, password)
				values('oracl2',11111)
				
	insert into member(id, password, name, phone, email, indate)
		values('oracle3',11111,NULL,NULL,NULL,NULL);  //NULL값으로 지정도 가능
	
	N개의 레코드저장
	한번에 여러개의 데이터를 추가할 수 있음 _ sql query  
	insert into 테이블명
		select from 
		
	insert into member(ID, PASSWORD)
			select substr(first_name, 1,5), employee_id 
			from employees;
		-> 문법의 문제는 없지만 테이블 컬럼제약조건에 걸리기 때문에 error(PK) 발생
	
	insert into member(ID, EMAIL,PASSWORD)
		select EMPLOYEE_ID,EMAIL, manager_id 
		from employees where first_name !='Steven';
		-> 제약조건을 모두 만족하는 경우
	
	모든 컬럼리스트를 다 넣는 경우 컬럼리스트 생략 가능
	insert into member
		values('oracle4',11111,'홍길도','010-1452-4152','tbjh@multi.com',sysdate); 
		
2> 데이터 삭제 DELETE
데이터만 삭제하고 테이블은 남아있음
	delete 테이블명 [where 조건]
	
	- 테이블 전체 데이터 삭제
	delete member
	
	- id 1,2,3 시작하면 삭제
	delete member where ID like '1%' or ID like'2%' or ID like'3%'
	
	rollback/Commit 
		commit 하면 삭제 복구 불가 
		그전에 rollback 하면 복구 가능

3> 데이터 수정 UPDATE
	테이블의 컬럼의 모든 값에 적용
	update 테이블명
		set 변경컬럼명 = 변경값

	칼럼의 특정값에 적용
	update 테이블명
		set 변경컬럼명 = 변경값
		where 수정조건식
		
	update 테이블명
		set 변경컬럼명 = 변경값
		where (select)
		
	member 테이블에서 id = oracle 회원의 폰번호,이름 변경 -> 010-9999-0987, '이길도'
	update member set name = '이길동', phone = '010-9999-0987'
		where id = 'oracle4';
	commit;
	
	member 테이블에서 전화번호 뒤 4자리가 0987인 회원과 같은 날짜의 회원이 있으면 이 회원의 가입날짜를 내일로 변경
	update member set indate = sysdate+1
		where to_char(indate,'yyyy-mm-dd') = (select to_char(indate,'yyyy-mm-dd)
											  from member
											  where phone like '%0987')
		
			
** select (select)
   create table ~ as select 
   insert into ~ select
   

실제 DB 영구반영
** commit : 그동안 작업을 저장하는 명령어, DB영구반영
	이클립스에서 실행시 AUTO COMMIT; #rollback불가
	
** rollback : 명령취소 


오라클 데이터 삭제
drop table 테이블명 : 복구X
delete 테이블명 : 테이블명 O, 데이터 X, 자동 commit X -> 복구 가능 ROLLBACK 


자바-sql 연동 :JDBC
API : java.sql.* 이용

자바 - JDBC DRIVER 설치 - SQL 

자바 SQL 활용순서
	0. JDBC DRIVER 호출
	1. DB 연결
	2. SQL 전송
	3. SQL 결과 검색
	4. DB 연결해제
	

JDBC DRIVER 설치 -> oracle 11G xe 에 포함
	if not www.oracle.com -> 다운로드 -> database& utility -> JDBC DRIVER







